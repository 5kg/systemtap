#!/bin/bash

# $1 - install/uninstall
# $2 - $STAPTMPDIR
# $3 - PID/unique name
# $4 - RULE name
# $5 - class
# $6 - method
# $7 - number of args
# $8 - entry/exit/line
# $9 - options to pass to bminstall


#byteman checks
if [ -z "$BYTEMAN_HOME" ]; then
# use the root of the path to this file to locate the byteman jar
    BYTEMAN_HOME=${0%*/bin/bmsubmit.sh}
# allow for rename to plain submit
    if [ "$BYTEMAN_HOME" == "$0" ]; then
	BYTEMAN_HOME=${0%*/bin/bmsubmit}
    fi
    if [ "$BYTEMAN_HOME" == "$0" ]; then
	echo "Unable to find byteman home"
	exit
    fi
fi
# the byteman and byteman-submit jars should be in ${BYTEMAN_HOME}/lib
if [ -r ${BYTEMAN_HOME}/lib/byteman.jar ]; then
    BYTEMAN_JAR=${BYTEMAN_HOME}/lib/byteman.jar
else
    echo "Cannot locate byteman jar"
    exit
fi
if [ -r ${BYTEMAN_HOME}/lib/byteman-submit.jar ]; then
    BYTEMAN_SUBMIT_JAR=${BYTEMAN_HOME}/lib/byteman-submit.jar
else
    echo "Cannot locate byteman-submit jar"
    exit
fi
# the Install class is in the byteman-install jar
if [ -r ${BYTEMAN_HOME}/lib/byteman-install.jar ]; then
    BYTEMAN_INSTALL_JAR=${BYTEMAN_HOME}/lib/byteman-install.jar
else
    echo "Cannot locate byteman install jar"
    exit
fi
# we also need a tools jar from JAVA_HOME
if [ -z "$JAVA_HOME" ]; then
     echo "please set JAVA_HOME"
     exit
fi
# on Linux we need to add the tools jar to the path
# this is not currently needed on a Mac
OS=`uname`
if [ ${OS} != "Darwin" ]; then
  if [ -r ${JAVA_HOME}/lib/tools.jar ]; then
      TOOLS_JAR=${JAVA_HOME}/lib/tools.jar
  else
      echo "Cannot locate tools jar"
      exit
  fi
fi

#We need to both record, and check that this pid is the first
#This is to avoid recurssion in probing java processes
mkdir -p "$2/java"
FILE=`hostname`-$$
JAVA_FILE=`hostname`-`jps -l | grep $3 | cut -f1 -d" "`
JAVA_NAME_FILE=`hostname`-`jps -l | grep $3 | cut -f2 -d" "`
function write_rule()
{
    if [[ ! -f "$2/java/$4-lock" ]]
    then
	touch "$2/java/$4-lock"
	echo "RULE $4" >> "$2/java/$4-tmp.btm"
	echo "CLASS $5" >> "$2/java/$4-tmp.btm"
	echo "METHOD $6" >> "$2/java/$4-tmp.btm"
	echo "HELPER HelperSDT" >> "$2/java/$4-tmp.btm"
        #at what begin, end, line?
	script_invocation_location "$8" "$2" "$4"
	echo "IF TRUE" >> "$2/java/$4-tmp.btm"
        # stap helper method switch statement
	print_stap_helper "$7" "$5" "$6" "$2" "$4"
	echo "ENDRULE" >> "$2/java/$4-tmp.btm"

	if [ -f "$2/java/$4.btm" ]
	then
	    DIFF=$(diff "$2/java/$4.btm" "$2/java/$4-tmp.btm")
	    if [ "$DIFF" != "" ]
	    then
		cat "$2/java/$4-tmp.btm" > "$2/java/$4.btm"
		rm "$2/java/$4-lock" 2>/dev/null 1>/dev/null
		exit
	    else
		if [ -f "$2/java/$JAVA_FILE" ]
		then
		    rm "$2/java/$4-lock" 2>/dev/null 1>/dev/null
		    exit
		fi
	    fi
	else
	    cp "$2/java/$4-tmp.btm" "$2/java/$4.btm"
	    rm "$2/java/$4-lock" 2>/dev/null 1>/dev/null
	fi
    else
#	sleep 0.5
#	write_rule $1 $2 $3 $4 $5 $6 $7 $8
	exit
    fi

}
function install_byteman()
{
    if [[ ! -f "$4/java/$JAVA_FILE" && ! -f "$4/java/$JAVA_NAME_FILE" &&! -f "$4/java/`hostname`-install" ]]
    then
	touch "$4/java/$JAVA_FILE"
	touch "$4/java/$JAVA_NAME_FILE"
	touch "$4/java/`hostname`-install"
	exec java $5 -classpath ${BYTEMAN_INSTALL_JAR}:${TOOLS_JAR} org.jboss.byteman.agent.install.Install $2 &
	pid=$!
	wait $pid
	rm "$4/java/`hostname`-install" 2>&1 1>/dev/null
    fi
}

function submit_byteman()
{
    if [[ -f "$4/java/$JAVA_FILE" && ! -f "$4/java/`hostname`-submit" && ! -f "$4/java/`hostname`-install" ]]
    then
	touch "$4/java/`hostname`-submit"
	exec java -classpath ${BYTEMAN_JAR}:${BYTEMAN_SUBMIT_JAR} org.jboss.byteman.agent.submit.Submit -l "$4/java/$3.btm" 2>&1 1>/dev/null &
	pida=$!
	wait $pida
	rm "$4/java/`hostname`-submit" 2>/dev/null 1>/dev/null
	exit
    else
	if [[ ! -f "$4/java/`hostname`-submit" ]]
	then
	    submit_byteman "$1" "$2" "$3" "$4"
	else
	    sleep 0.5
	    submit_byteman "$1" "$2" "$3" "$4"
	fi
    fi
}

function check_running()
{

    if [ -f "$4/java/$FILE" ]
    then
	exit
    fi
    if [[ -f "$4/java/$JAVA_FILE" && -f "$4/java/$JAVA_NAME_FILE" ]]
    then
	touch "$4/java/$FILE"
	exit
    fi
    if [ -f "$4/java/`hostname`-$5-lock" ]
    then
	exit
    fi
}

function run_byteman()
{

    case "$1" in
	install)
	    if [[ ! -f "$4/java/$JAVA_FILE" && ! -f "$4/java/`hostname`-install" ]]
	    then
		install_byteman "$1" "$2" "$3" "$4" "$5"
	    fi
	    submit_byteman "$1" "$2" "$3" "$4"
	    ;;
	uninstall)
#	    exec bmsubmit.sh -u $4/java/$3.btm &
#	    pidb=$!
#	    wait $pidb
	    rm "$4/java/$3.btm"
	    rm "$4/java/$3-tmp.btm"
#need to remove $4/java dir if empty
	    exit
	    ;;
	*)
	    echo "this should never be hit"
	    ;;
    esac

}

#function for where to execute the script
function script_invocation_location()
{
    case "$1" in
	entry)
	    echo "AT ENTRY" >> "$2/java/$3-tmp.btm"
	    ;;
	exi*)
	    echo "AT RETURN" >> "$2/java/$3-tmp.btm"
	    ;;
	*)
	    echo "AT LINE $1" >> "$2/java/$3-tmp.btm"
	    ;;
    esac
}

#function with case
function print_stap_helper
{
  case "$1" in
      0)
	  echo "DO METHOD_STAP_PROBE0(\"$2\", \"$3\")" >> "$4/java/$5-tmp.btm"
	  ;;
      1)
	  echo "DO METHOD_STAP_PROBE1(\"$2\", \"$3\", \$1)" >> "$4/java/$5-tmp.btm"
	  ;;
      2)
	  echo "DO METHOD_STAP_PROBE2(\"$2\", \"$3\", \$1, \$2)" >> "$4/java/$5-tmp.btm"
	  ;;
      3)
	  echo "DO METHOD_STAP_PROBE3(\"$2\", \"$3\", \$1, \$2, \$3)" >> "$4/java/$5-tmp.btm"
	  ;;
      4)
	  echo "DO METHOD_STAP_PROBE4(\"$2\", \"$3\", \$1, \$2, \$3, \$4)" >> "$4/java/$5-tmp.btm"
	  ;;
      5)
	  echo "DO METHOD_STAP_PROBE5(\"$2\", \"$3\", \$1, \$2, \$3, \$4, \$5)" >> "$4/java/$5-tmp.btm"
	  ;;
      6)
	  echo "DO METHOD_STAP_PROBE6(\"$2\", \"$3\", \$1, \$2, \$3, \$4, \$5, \$6)" >> "$4/java/$5-tmp.btm"
	  ;;
      7)
	  echo "DO METHOD_STAP_PROBE7(\"$2\", \"$3\", \$1, \$2, \$3, \$4, \$5, \$6, \$7)" >> "$4/java/$5-tmp.btm"
	  ;;
      8)
	  echo "DO METHOD_STAP_PROBE8(\"$2\", \"$3\", \$1, \$2, \$3, \$4, \$5, \$6, \$7, \$8)" >> "$4/java/$5-tmp.btm"
	  ;;
      9)
	  echo "DO METHOD_STAP_PROBE9(\"$2\", \"$3\", \$1, \$2, \$3, \$4, \$5, \$6, \$7, \$8, \$9)" >> "$4/java/$5-tmp.btm"
	  ;;
      10)
	  echo "DO METHOD_STAP_PROBE10(\"$2\", \"$3\", \$1, \$2, \$3, \$4, \$5, \$6, \$7, \$8, \$9, \$10)" >> "$4/java/$5-tmp.btm"
	  ;;
      *)
	  echo "DO METHOD_STAP_PROBE0(\"$2\", \"$3\")" >> "$4/java/$5-tmp.btm"
	  ;;
  esac
}


check_running "$2" "$3" "$5" "$6" "$4"
write_rule "$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8"
run_byteman "$1" "$3" "$4" "$2" "$9"
